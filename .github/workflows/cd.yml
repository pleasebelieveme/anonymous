# gradle test + build + docker build + push + ssh deploy
name: Deploy to Server

on:
  workflow_dispatch:   # 수동 실행 버튼
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Run tests with Gradle
        run: ./gradlew test --stacktrace --info
        env:
          TESTCONTAINERS_RYUK_DISABLED: true

      - name: Build with Gradle
        run: ./gradlew build --stacktrace --info

      - name: Build and Push Docker Image
        run: |
          docker build -f infra/Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/hansabal-backend:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/hansabal-backend:latest

      - name: SSH and Deploy to Server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_SSH_KEY }}
          script: |
            DEPLOY_DIR="/home/${{ secrets.AWS_EC2_USER }}/hansabal_backend"

            if [ ! -d "$DEPLOY_DIR" ]; then
              git clone https://github.com/${{ github.repository }} "$DEPLOY_DIR"
            fi

            cd "$DEPLOY_DIR" || exit 1
            git pull origin main

            echo "${{ secrets.ENV }}" > .env

            docker compose -f docker-compose.yml pull
            docker compose -f docker-compose.yml down
            docker compose -f docker-compose.yml up -d
